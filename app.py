import streamlit as st
import requests
import json
from docx import Document
from io import BytesIO

# Set page configuration
st.set_page_config(page_title="Diccionario de Problemas EconÃ³micos", page_icon="ğŸ“š", layout="wide")

# Function to create the information column
def crear_columna_info():
    st.markdown("""
    ## Sobre esta aplicaciÃ³n

    Esta aplicaciÃ³n es un Diccionario de Problemas EconÃ³micos. Permite a los usuarios obtener respuestas a problemas econÃ³micos segÃºn la interpretaciÃ³n de diversas corrientes econÃ³micas.

    ### CÃ³mo usar la aplicaciÃ³n:

    1. Elija un problema econÃ³mico de la lista predefinida o proponga su propio problema.
    2. Seleccione una o mÃ¡s corrientes econÃ³micas.
    3. Haga clic en "Obtener respuesta" para generar las respuestas.
    4. Lea las respuestas y fuentes proporcionadas.
    5. Si lo desea, descargue un documento DOCX con toda la informaciÃ³n.

    ### Autor y actualizaciÃ³n:
    **Moris Polanco**, 26 ag 2024

    ### CÃ³mo citar esta aplicaciÃ³n (formato APA):
    Polanco, M. (2024). *Diccionario de Problemas EconÃ³micos* [AplicaciÃ³n web]. https://dicproblemas.streamlit.app

    ---
    **Nota:** Esta aplicaciÃ³n utiliza inteligencia artificial para generar respuestas basadas en informaciÃ³n disponible en lÃ­nea. Siempre verifique la informaciÃ³n con fuentes acadÃ©micas para un anÃ¡lisis mÃ¡s profundo.
    """)

# Titles and Main Column
st.title("Diccionario de Problemas EconÃ³micos")

col1, col2 = st.columns([1, 2])

with col1:
    crear_columna_info()

with col2:
    TOGETHER_API_KEY = st.secrets["TOGETHER_API_KEY"]
    SERPER_API_KEY = st.secrets["SERPER_API_KEY"]

    # 101 economic problems in question form
    problemas_economicos = sorted([
        "Â¿CÃ³mo se determinan los precios en un mercado libre?", "Â¿CuÃ¡l es el impacto del salario mÃ­nimo en el empleo?", 
        "Â¿QuÃ© efectos tiene la inflaciÃ³n en la economÃ­a?", "Â¿CÃ³mo influyen los tipos de interÃ©s en la inversiÃ³n?", 
        "Â¿Es el dÃ©ficit fiscal perjudicial para la economÃ­a?", "Â¿CÃ³mo afectan los aranceles al comercio internacional?", 
        "Â¿QuÃ© papel juegan los bancos centrales en la estabilidad econÃ³mica?", 
        "Â¿La polÃ­tica fiscal expansionista es efectiva para combatir la recesiÃ³n?", 
        "Â¿CuÃ¡l es la relaciÃ³n entre la oferta monetaria y la inflaciÃ³n?", 
        "Â¿QuÃ© diferencias existen entre el capitalismo y el socialismo?", "Â¿CÃ³mo funciona el concepto de la mano invisible de Adam Smith?", 
        "Â¿CuÃ¡les son las causas del desempleo estructural?", "Â¿QuÃ© ventaja tiene el comercio internacional?", 
        "Â¿CÃ³mo afecta la globalizaciÃ³n a las economÃ­as locales?", "Â¿QuÃ© es la teorÃ­a del valor-trabajo?", 
        "Â¿CuÃ¡les son los problemas del mercado laboral contemporÃ¡neo?", "Â¿De quÃ© manera impacta la educaciÃ³n en el crecimiento econÃ³mico?", 
        "Â¿QuÃ© es la trampa de la liquidez en la teorÃ­a keynesiana?", "Â¿Puede el proteccionismo ser beneficioso?", 
        "Â¿QuÃ© son los ciclos econÃ³micos?", "Â¿CÃ³mo se mide el producto interno bruto (PIB)?", 
        "Â¿QuÃ© es la estanflaciÃ³n y cÃ³mo se combate?", "Â¿CÃ³mo se relacionan la oferta y demanda de dinero con la inflaciÃ³n?", 
        "Â¿CuÃ¡l es el efecto de la deuda pÃºblica sobre la economÃ­a?", "Â¿QuÃ© es la teorÃ­a de los juegos y cÃ³mo se aplica en la economÃ­a?", 
        "Â¿CÃ³mo afectan los impuestos al comportamiento de los consumidores?", "Â¿QuÃ© es la elasticidad precio de la demanda?", 
        "Â¿QuÃ© implica la existencia de externalidades en el mercado?", "Â¿CÃ³mo se determina el tipo de cambio en el mercado de divisas?", 
        "Â¿QuÃ© es la curva de Laffer?", "Â¿QuÃ© es el anÃ¡lisis coste-beneficio?", "Â¿QuÃ© papel juegan las instituciones en el desarrollo econÃ³mico?", 
        "Â¿CÃ³mo se regula la competencia en los mercados?", "Â¿QuÃ© es la economÃ­a del bienestar?", 
        "Â¿CuÃ¡les son las consecuencias de la intervenciÃ³n gubernamental en la economÃ­a?", "Â¿QuÃ© es la eficiencia de Pareto?", 
        "Â¿QuÃ© es la teorÃ­a del capital humano?", "Â¿QuÃ© es el coeficiente de Gini y quÃ© mide?", 
        "Â¿CÃ³mo funciona el modelo de oferta y demanda agregada?", "Â¿QuÃ© es la teorÃ­a econÃ³mica neoclÃ¡sica?", 
        "Â¿QuÃ© es el equilibrio general en la economÃ­a?", "Â¿CÃ³mo afectan las polÃ­ticas monetarias a la economÃ­a?", 
        "Â¿QuÃ© es la matriz insumo-producto?", "Â¿QuÃ© es la paradoja del ahorro?", "Â¿QuÃ© es la teorÃ­a de las expectativas racionales?", 
        "Â¿QuÃ© es el multiplicador keynesiano?", "Â¿QuÃ© es un monopolio y cÃ³mo se regula?", "Â¿QuÃ© es la teorÃ­a de la utilidad marginal?", 
        "Â¿QuÃ© es la teorÃ­a de la renta ricardiana?", "Â¿QuÃ© es la teorÃ­a de la elecciÃ³n del consumidor?", 
        "Â¿QuÃ© es el equilibrio de Nash?", "Â¿QuÃ© es la teorÃ­a del comercio internacional?", 
        "Â¿QuÃ© es la economÃ­a de la oferta?", "Â¿QuÃ© son las economÃ­as de escala?", 
        "Â¿QuÃ© es la teorÃ­a de la agencia?", "Â¿QuÃ© es la teorÃ­a del desarrollo endÃ³geno?", 
        "Â¿QuÃ© es el superÃ¡vit y el dÃ©ficit comercial?", "Â¿QuÃ© son los bienes pÃºblicos y cÃ³mo se financian?", 
        "Â¿QuÃ© es la economÃ­a conductual?", "Â¿QuÃ© es la teorÃ­a del crecimiento econÃ³mico?", 
        "Â¿QuÃ© es la tasa natural de desempleo?", "Â¿QuÃ© son las polÃ­ticas de estabilizaciÃ³n?", 
        "Â¿QuÃ© es la teorÃ­a de la preferencia intertemporal?", "Â¿QuÃ© es la regla de oro de la acumulaciÃ³n?", 
        "Â¿Para quÃ© sirve el modelo de Heckscher-Ohlin?", "Â¿QuÃ© es la polÃ­tica monetaria no convencional?", 
        "Â¿QuÃ© es la economÃ­a de la informaciÃ³n?", "Â¿CÃ³mo afectan los subsidios a la economÃ­a?", 
        "Â¿QuÃ© es la teorÃ­a del salario de eficiencia?", "Â¿QuÃ© es el efecto multiplicador del gasto pÃºblico?", 
        "Â¿QuÃ© es la polÃ­tica de ingresos?", "Â¿QuÃ© es el mercado laboral dual?", 
        "Â¿QuÃ© es el modelo de crecimiento de Solow?", "Â¿QuÃ© es la teorÃ­a de los mercados eficientes?", 
        "Â¿QuÃ© es el crowding out?", "Â¿QuÃ© es la economÃ­a del comportamiento?", "Â¿QuÃ© es la economÃ­a informal?", 
        "Â¿QuÃ© es el problema de agencia?", "Â¿QuÃ© es la teorÃ­a del estado estacionario?", 
        "Â¿QuÃ© es la economÃ­a institucional?", "Â¿CÃ³mo afectan las expectativas en los mercados financieros?", 
        "Â¿QuÃ© es el ciclo econÃ³mico real?", "Â¿QuÃ© es el mercado de capitales?", 
        "Â¿QuÃ© es la teorÃ­a cuantitativa del dinero?", "Â¿QuÃ© es la inflaciÃ³n por demanda?", 
        "Â¿QuÃ© es la inflaciÃ³n por costos?", "Â¿QuÃ© es la polÃ­tica arancelaria?", 
        "Â¿QuÃ© es la paridad del poder adquisitivo?", "Â¿QuÃ© es la solvencia fiscal?", 
        "Â¿QuÃ© son los bienes de lujo?", "Â¿QuÃ© son los bienes inferiores?", "Â¿QuÃ© son los bienes sustitutos?", 
        "Â¿QuÃ© es la curva de demanda?", "Â¿QuÃ© es la oferta agregada?", "Â¿QuÃ© es el producto potencial?", 
        "Â¿QuÃ© es el modelo IS-LM?", "Â¿QuÃ© es la polÃ­tica de oferta?", "Â¿QuÃ© es el balance presupuestario?", 
        "Â¿QuÃ© son los bienes transables?", "Â¿QuÃ© es la economÃ­a polÃ­tica?", "Â¿QuÃ© es la economÃ­a experimental?", 
        "Â¿QuÃ© es la teorÃ­a de los contratos?"
    ])

    # Economic schools of thought
    escuelas_economicas = [
        "Escuela AustrÃ­aca de EconomÃ­a", "Socialismo", "Keynesianismo", "Monetarismo", 
        "Mercantilismo", "Marxismo", "Neoclasicismo", "Fisiocracia", "EconomÃ­a del Desarrollo", 
        "EconomÃ­a Conductual", "Escuela de Chicago", "Institucionalismo", "EconÃ³mica Feminista", 
        "Poskeynesianismo", "Escuela de FrÃ¡ncfort"
    ]

    def buscar_informacion(query, escuela):
        url = "https://google.serper.dev/search"
        payload = json.dumps({
            "q": f"{query} {escuela} economÃ­a"
        })
        headers = {
            'X-API-KEY': SERPER_API_KEY,
            'Content-Type': 'application/json'
        }
        response = requests.post(url, headers=headers, data=payload)
        return response.json()

    def generar_respuesta(problema, escuela, contexto):
        url = "https://api.together.xyz/inference"
        payload = json.dumps({
            "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",
            "prompt": f"Contexto: {contexto}\n\nProblema: {problema}\nEscuela: {escuela}\n\nProporciona una respuesta al problema econÃ³mico '{problema}' segÃºn la interpretaciÃ³n del {escuela}. La respuesta debe ser concisa pero informativa, similar a una entrada de diccionario. Si es posible, incluye una referencia a una obra o figura especÃ­fica de {escuela} que trate este concepto.\n\nRespuesta:",
            "max_tokens": 2048,
            "temperature": 0,
            "top_p": 0.7,
            "top_k": 50,
            "repetition_penalty": 0,
            "stop": ["Problema:"]
        })
        headers = {
            'Authorization': f'Bearer {TOGETHER_API_KEY}',
            'Content-Type': 'application/json'
        }
        response = requests.post(url, headers=headers, data=payload)
        return response.json()['output']['choices'][0]['text'].strip()

    def create_docx(problema, respuestas, fuentes):
        doc = Document()
        doc.add_heading('Diccionario de Problemas EconÃ³micos', 0)

        doc.add_heading('Problema', level=1)
        doc.add_paragraph(problema)

        for escuela, respuesta in respuestas.items():
            doc.add_heading(f'Respuesta segÃºn la corriente {escuela}', level=2)
            doc.add_paragraph(respuesta)

        doc.add_heading('Fuentes', level=1)
        for fuente in fuentes:
            doc.add_paragraph(fuente, style='List Bullet')

        doc.add_paragraph('\nNota: Este documento fue generado por un asistente de IA. Verifica la informaciÃ³n con fuentes acadÃ©micas para un anÃ¡lisis mÃ¡s profundo.')

        return doc

    st.write("Elige un problema econÃ³mico de la lista o propÃ³n tu propio problema:")

    opcion = st.radio("", ["Elegir de la lista", "Proponer mi propio problema"])

    if opcion == "Elegir de la lista":
        problema = st.selectbox("Selecciona un problema:", problemas_economicos)
    else:
        problema = st.text_input("Ingresa tu propio problema econÃ³mico:")

    st.write("Selecciona una o mÃ¡s corrientes econÃ³micas (mÃ¡ximo 5):")
    escuelas_seleccionadas = st.multiselect("Corrientes EconÃ³micas", escuelas_economicas)

    if len(escuelas_seleccionadas) > 5:
        st.warning("Has seleccionado mÃ¡s de 5 corrientes. Por favor, selecciona un mÃ¡ximo de 5.")
    else:
        if st.button("Obtener respuesta"):
            if problema and escuelas_seleccionadas:
                with st.spinner("Buscando informaciÃ³n y generando respuestas..."):
                    respuestas, todas_fuentes = {}, []

                    for escuela in escuelas_seleccionadas:
                        # Buscar informaciÃ³n relevante
                        resultados_busqueda = buscar_informacion(problema, escuela)
                        contexto = "\n".join([item["snippet"] for item in resultados_busqueda.get("organic", [])])
                        fuentes = [item["link"] for item in resultados_busqueda.get("organic", [])]

                        # Generar respuesta
                        respuesta = generar_respuesta(problema, escuela, contexto)

                        respuestas[escuela] = respuesta
                        todas_fuentes.extend(fuentes)

                    # Mostrar las respuestas
                    st.subheader(f"Respuestas para el problema: {problema}")
                    for escuela, respuesta in respuestas.items():
                        st.markdown(f"**{escuela}:** {respuesta}")

                    # BotÃ³n para descargar el documento
                    doc = create_docx(problema, respuestas, todas_fuentes)
                    buffer = BytesIO()
                    doc.save(buffer)
                    buffer.seek(0)
                    st.download_button(
                        label="Descargar respuesta en DOCX",
                        data=buffer,
                        file_name=f"Respuesta_{problema.replace(' ', '_')}.docx",
                        mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                    )
            else:
                st.warning("Por favor, selecciona un problema y al menos una corriente.")
